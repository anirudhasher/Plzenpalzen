(()=>{var e={};e.id=276,e.ids=[276],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},2112:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>p,serverHooks:()=>h,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>d});var n={};r.r(n),r.d(n,{POST:()=>c});var s=r(6559),o=r(8088),a=r(7719),i=r(694),u=r(2190);async function c(e){try{let{message:t,language:r,conversationHistory:n,context:s}=await e.json(),o=`You are a helpful multilingual assistant that helps users communicate in ${r}. 
    Respond naturally and appropriately to the conversation context. 
    If the user speaks in English, translate your response to ${r} and provide both versions.
    Keep responses conversational and culturally appropriate.
    
    ${s?`Previous conversation context:
${s}`:""}`,a=[{role:"system",content:o},...n,{role:"user",content:t}],u=function(){if(!process.env.OPENAI_API_KEY)throw Error("OpenAI API key is not configured");return new i.z4({apiKey:process.env.OPENAI_API_KEY})}(),c=await u.chat.completions.create({model:"gpt-3.5-turbo",messages:a,max_tokens:150,temperature:.7,stream:!0}),p=new TextEncoder,l=new ReadableStream({async start(e){try{let t="";for await(let r of c){let n=r.choices[0]?.delta?.content||"";n&&(t+=n,e.enqueue(p.encode(`data: ${JSON.stringify({content:n,fullReply:t})}

`)))}e.enqueue(p.encode(`data: ${JSON.stringify({done:!0,fullReply:t})}

`)),e.close()}catch(t){e.error(t)}}});return new Response(l,{headers:{"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive"}})}catch(t){let e=t instanceof Error?t.message:"Unknown error occurred";if(t instanceof Error&&t.message.includes("API key"))return u.NextResponse.json({error:"OpenAI API key is not configured"},{status:500});return u.NextResponse.json({error:e},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/chat/route",pathname:"/api/chat",filename:"route",bundlePath:"app/api/chat/route"},resolvedPagePath:"/root/clonelingua/src/app/api/chat/route.ts",nextConfigOutput:"standalone",userland:n}),{workAsyncStorage:l,workUnitAsyncStorage:d,serverHooks:h}=p;function x(){return(0,a.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:d})}},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[447,580,694],()=>r(2112));module.exports=n})();